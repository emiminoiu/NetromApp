@model IEnumerable<WebApp.Models.Announce>

@*@{
    ViewData["Title"] = "Index";
}*@

<h2>Index</h2>

<p style="color:red;font-family:Arial;font-size:25px">Pagina de Anunturi</p>
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        .dropbtn {
            background-color: #4CAF50;
            color: white;
            padding: 15px;
            font-size: 15px;
            border: none;
            cursor: pointer;
        }

            .dropbtn:hover, .dropbtn:focus {
                background-color: #3e8e41;
            }

        #myInput {
            border-box: box-sizing;
            background-image: url('searchicon.png');
            background-position: 14px 12px;
            background-repeat: no-repeat;
            font-size: 11x;
            padding: 10px 18px 10px 40px;
            border: none;
            border-bottom: 1px solid #ddd;
        }

            #myInput:focus {
                outline: 3px solid #ddd;
            }

        .dropdown {
            position: relative;
            display: inline-block;
        }

        .dropdown-content {
            display: none;
            position: absolute;
            background-color: #f6f6f6;
            min-width: 230px;
            overflow: auto;
            border: 1px solid #ddd;
            z-index: 1;
        }

            .dropdown-content a {
                color: black;
                padding: 10px 14px;
                text-decoration: none;
                display: block;
            }

        .dropdown a:hover {
            background-color: #ddd;
        }

        .show {
            display: block;
        }
    </style>



    <!DOCTYPE html>
    <html>
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <style>
            * {
                box-sizing: border-box;
            }

            body {
                font: 16px Arial;
            }

            .autocomplete {
                /*the container must be positioned relative:*/
                position: relative;
                display: inline-block;
            }

            input {
                border: 1px solid transparent;
                background-color: #f1f1f1;
                padding: 10px;
                font-size: 16px;
            }

                input[type=text] {
                    background-color: #f1f1f1;
                    width: 100%;
                }

                input[type=submit] {
                    background-color: DodgerBlue;
                    color: #fff;
                    cursor: pointer;
                }

            .autocomplete-items {
                position: absolute;
                border: 1px solid #d4d4d4;
                border-bottom: none;
                border-top: none;
                z-index: 99;
                /*position the autocomplete items to be the same width as the container:*/
                top: 100%;
                left: 0;
                right: 0;
            }

                .autocomplete-items div {
                    padding: 10px;
                    cursor: pointer;
                    background-color: #fff;
                    border-bottom: 1px solid #d4d4d4;
                }

                    .autocomplete-items div:hover {
                        /*when hovering an item:*/
                        background-color: #e9e9e9;
                    }

            .autocomplete-active {
                /*when navigating through the items using the arrow keys:*/
                background-color: DodgerBlue !important;
                color: #ffffff;
            }
        </style>
    </head>

    <body>
        

        <p>Alege categoria:</p>

        <!--Make sure the form has the autocomplete function switched off:-->
        <form autocomplete="off" asp-controller="Announces" asp-action="Index" method="get">
            <div class="autocomplete" style="width:300px;">
                <input id="myInput" type="text" name="myInput" placeholder="Cauta dupa categorie">
                <span class="input-group-btn">
                    <button class="btn btn-success" asp-controller="Announces" asp-action="SortbyCategory">CautaAcum</button>
                </span>
            </div>
            @*<input type="submit">*@
        </form>

        <script>
            function autocomplete(inp, arr) {
                /*the autocomplete function takes two arguments,
                the text field element and an array of possible autocompleted values:*/
                var currentFocus;
                /*execute a function when someone writes in the text field:*/
                inp.addEventListener("input", function (e) {
                    var a, b, i, val = this.value;
                    /*close any already open lists of autocompleted values*/
                    closeAllLists();
                    if (!val) { return false; }
                    currentFocus = -1;
                    /*create a DIV element that will contain the items (values):*/
                    a = document.createElement("DIV");
                    a.setAttribute("id", this.id + "autocomplete-list");
                    a.setAttribute("class", "autocomplete-items");
                    /*append the DIV element as a child of the autocomplete container:*/
                    this.parentNode.appendChild(a);
                    /*for each item in the array...*/
                    for (i = 0; i < arr.length; i++) {
                        /*check if the item starts with the same letters as the text field value:*/
                        if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
                            /*create a DIV element for each matching element:*/
                            b = document.createElement("DIV");
                            /*make the matching letters bold:*/
                            b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                            b.innerHTML += arr[i].substr(val.length);
                            /*insert a input field that will hold the current array item's value:*/
                            b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
                            /*execute a function when someone clicks on the item value (DIV element):*/
                            b.addEventListener("click", function (e) {
                                /*insert the value for the autocomplete text field:*/
                                inp.value = this.getElementsByTagName("input")[0].value;
                                /*close the list of autocompleted values,
                                (or any other open lists of autocompleted values:*/
                                closeAllLists();
                            });
                            a.appendChild(b);
                        }
                    }
                });
                /*execute a function presses a key on the keyboard:*/
                inp.addEventListener("keydown", function (e) {
                    var x = document.getElementById(this.id + "autocomplete-list");
                    if (x) x = x.getElementsByTagName("div");
                    if (e.keyCode == 40) {
                        /*If the arrow DOWN key is pressed,
                        increase the currentFocus variable:*/
                        currentFocus++;
                        /*and and make the current item more visible:*/
                        addActive(x);
                    } else if (e.keyCode == 38) { //up
                        /*If the arrow UP key is pressed,
                        decrease the currentFocus variable:*/
                        currentFocus--;
                        /*and and make the current item more visible:*/
                        addActive(x);
                    } else if (e.keyCode == 13) {
                        /*If the ENTER key is pressed, prevent the form from being submitted,*/
                        e.preventDefault();
                        if (currentFocus > -1) {
                            /*and simulate a click on the "active" item:*/
                            if (x) x[currentFocus].click();
                        }
                    }
                });
                function addActive(x) {
                    /*a function to classify an item as "active":*/
                    if (!x) return false;
                    /*start by removing the "active" class on all items:*/
                    removeActive(x);
                    if (currentFocus >= x.length) currentFocus = 0;
                    if (currentFocus < 0) currentFocus = (x.length - 1);
                    /*add class "autocomplete-active":*/
                    x[currentFocus].classList.add("autocomplete-active");
                }
                function removeActive(x) {
                    /*a function to remove the "active" class from all autocomplete items:*/
                    for (var i = 0; i < x.length; i++) {
                        x[i].classList.remove("autocomplete-active");
                    }
                }
                function closeAllLists(elmnt) {
                    /*close all autocomplete lists in the document,
                    except the one passed as an argument:*/
                    var x = document.getElementsByClassName("autocomplete-items");
                    for (var i = 0; i < x.length; i++) {
                        if (elmnt != x[i] && elmnt != inp) {
                            x[i].parentNode.removeChild(x[i]);
                        }
                    }
                }
                /*execute a function when someone clicks in the document:*/
                document.addEventListener("click", function (e) {
                    closeAllLists(e.target);
                });
            }

            /*An array containing all the country names in the world:*/
            var countries = ["Auto", "Imobiliare", "Moda si Frumusete", "Casa si gradina", "Sport,Timp Liber,Arta", "Animale de companie", "Agro si Industrie", "Servicii si Afaceri", "Electronice si Electrocasnice"];

            /*initiate the autocomplete function on the "myInput" element, and pass along the countries array as possible autocomplete values:*/
            autocomplete(document.getElementById("myInput"), countries);
        </script>

    </body>
</html>




</head>
<body>

    @*<form asp-controller="Announces" asp-action="Index" method="get">
            <div class="row">
                <div class="input-group col-md-4">
                    <input type="text" class="form-control" placeholder="Cauta dupa nume" aria-label="Title" aria-describedby="basic-addon2" name="searchString">
                    <span class="input-group-btn">
                        <button class="btn btn-success" asp-controller="Announces" asp-action="Index">Cauta</button>
                        <button class="btn btn-success" asp-controller="Announces" asp-action="SortbyCategory">Casa si Gradina</button>
                    </span>
                </div>
            </div>
        </form>
   
        <div class="dropdown">
            <button onclick="myFunction()" class="dropbtn">ListaCategoriilor</button>
            <div id="myDropdown" class="dropdown-content">
                <input type="text" placeholder="Search.." name="searchString" onkeyup="filterFunction()">
                <button class="btn btn-success" asp-controller="Announces" asp-action="SortbyCategory">Casa si Gradina</button>
               
        <a asp-controller="Announces" asp-action="SortbyCategory">Imobiliare</a>
        <a asp-controller="Announces" asp-action="SortbyCategory">Moda si Frumusete</a>
        <a asp-controller="Announces" asp-action="SortbyCategory">Casa si Gradina</a>
        <a asp-controller="Announces" asp-action="SortbyCategory">Sport,Timp liber,Arta</a>
        <a asp-controller="Announces" asp-action="SortbyCategory">Electronice si Electrocasnice</a>
        <a asp-controller="Announces" asp-action="SortbyCategory">Animale de companie</a>
        <a asp-controller="Announces" asp-action="SortbyCategory">Agro si Industrie</a>
            </div>
        </div>
        @*</form>

        <script>
            /* When the user clicks on the button,
            toggle between hiding and showing the dropdown content */
            function myFunction() {
                document.getElementById("myDropdown").classList.toggle("show");
            }

            function filterFunction() {
                var input, filter, ul, li, a, i;
                input = document.getElementById("searchString");
                filter = input.value.toUpperCase();
                div = document.getElementById("myDropdown");
                a = div.getElementsByTagName("a");
                for (i = 0; i < a.length; i++) {
                    if (a[i].innerHTML.toUpperCase().indexOf(filter) > -1) {
                        a[i].style.display = "";
                    } else {
                        a[i].style.display = "none";
                    }
                }
            }
        </script>*@

</body>
</html>


<br>
<br>


<form asp-controller="Announces" asp-action="Index" method="get">
    <div class="row">
        <div class="input-group col-md-4">
            <input type="text" class="form-control" placeholder="Cauta dupa nume" aria-label="Title" aria-describedby="basic-addon2" name="searchString">
            <span class="input-group-btn">
                <button class="btn btn-success" asp-controller="Announces" asp-action="Index">Cauta</button>
            </span>
        </div>
    </div>
</form>
<form action="#">
    <div class="row">
        <button class="btn btn-primary" asp-controller="Announces" asp-action="Create" style="float:right" />Create new</button>
    </div>
    @*<a asp-action="Create">Create New</a>*@

</form>
@*<p>
        <a asp-action="Create">Create New</a>
    </p>*@
@*<table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AddingDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExpiringDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Poza)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Category)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.User)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AddingDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ExpiringDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Poza)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.CategoryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User.Email)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.AnnounceId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.AnnounceId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.AnnounceId">Delete</a>
                </td>
            </tr>
    }
        </tbody>
    </table>*@
@*<div class="row">
    @foreach (var item in Model)
    {
        <div class="row card">
            <div class="col-md-3">

                <img src="~/images/team3.png" style="width:100%">

            </div>
            <div class="col-md-9">
                <h4><b><a asp-action="Details" asp-route-id="@item.AnnounceId">@Html.DisplayFor(modelItem => item.Title)</a></b></h4>
                <p> @Html.DisplayFor(modelItem => item.Description)</p>
                <br>
                <br>
                <br>
                <br>
                <br>
                <br>
                <p>
                    @Html.DisplayFor(modelItem => item.AddingDate)
                </p>
            </div>

        </div>

    }*@

<div class="row">
    @foreach (var item in Model)
    {
        <div class="card">
            <div class="row">
                <div class="col-md-3">
                    <a asp-action="Details" asp-route-id="@item.AnnounceId">
                        <img src="~/images/team3.png" alt="Avatar" style="width:100%">
                    </a>
                </div>
                <div class="col-md-9" style="height:270px">
                    <h4><b><a asp-action="Details" asp-route-id="@item.AnnounceId">@Html.DisplayFor(modelItem => item.Title)</a></b></h4>
                    <p>@Html.DisplayFor(modelItem => item.Description)</p>
                    <div class="bottom-align-text">
                        <b>@Html.DisplayFor(modelItem => item.AddingDate)</b>
                    </div>
                </div>


            </div>
        </div>

    }
</div>


    </div>

</div>